/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -m -i generic-types.h -p nm-agent-managerinterface /space/kde/src/git/extragear/libs/libnm-qt/dbus/introspection/nm-agent-manager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NM-AGENT-MANAGERINTERFACE_H
#define NM-AGENT-MANAGERINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "generic-types.h"

/*
 * Proxy class for interface org.freedesktop.NetworkManager.AgentManager
 */
class OrgFreedesktopNetworkManagerAgentManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.NetworkManager.AgentManager"; }

public:
    OrgFreedesktopNetworkManagerAgentManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopNetworkManagerAgentManagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Register(const QString &identifier)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(identifier);
        return asyncCallWithArgumentList(QLatin1String("Register"), argumentList);
    }

    inline QDBusPendingReply<> Unregister()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Unregister"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

#endif
