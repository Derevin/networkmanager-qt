/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -m -i generictypes.h -p nm-device-macvlaninterface /home/jgrulich/development/projects/libnm-qt/dbus/introspection/nm-device-macvlan.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NETWORKMANAGERQT_DEVICE_MACVLANINTERFACE_H
#define NETWORKMANAGERQT_DEVICE_MACVLANINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "generictypes.h"

/*
 * Proxy class for interface org.freedesktop.NetworkManager.Device.Macvlan
 */
class OrgFreedesktopNetworkManagerDeviceMacvlanInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.NetworkManager.Device.Macvlan"; }

public:
    OrgFreedesktopNetworkManagerDeviceMacvlanInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopNetworkManagerDeviceMacvlanInterface();

    Q_PROPERTY(QString Mode READ mode)
    inline QString mode() const
    { return qvariant_cast< QString >(property("Mode")); }

    Q_PROPERTY(bool NoPromisc READ noPromisc)
    inline bool noPromisc() const
    { return qvariant_cast< bool >(property("NoPromisc")); }

    Q_PROPERTY(QDBusObjectPath Parent READ parent)
    inline QDBusObjectPath parent() const
    { return qvariant_cast< QDBusObjectPath >(property("Parent")); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void PropertiesChanged(const QVariantMap &properties);
};

#endif
